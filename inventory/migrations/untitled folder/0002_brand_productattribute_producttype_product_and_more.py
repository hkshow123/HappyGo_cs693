# Generated by Django 5.0 on 2023-12-13 13:07

import django.db.models.deletion
import mptt.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('inventory', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='format:required,unique,max-255', max_length=255, unique=True, verbose_name='brand name')),
            ],
        ),
        migrations.CreateModel(
            name='ProductAttribute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='format:required,unique,max-255', max_length=255, unique=True, verbose_name='product attribute name')),
                ('description', models.TextField(help_text='format:required', unique=True, verbose_name='Product attribute description')),
            ],
        ),
        migrations.CreateModel(
            name='ProductType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='format:product,unique,max-255', max_length=255, unique=True, verbose_name='type of product')),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('web_id', models.CharField(help_text='format:required,unique', max_length=50, unique=True, verbose_name='product web id')),
                ('slug', models.CharField(help_text='format:required,letters,numbers,underscore,or hyphens', max_length=50, unique=True, verbose_name='product web id')),
                ('name', models.CharField(help_text='format:required,max-100', max_length=100, verbose_name='product name')),
                ('description', models.TextField(help_text='format:required,max-100', max_length=255, verbose_name='product description')),
                ('is_active', models.BooleanField(default=True, help_text='format:true=product visible', verbose_name='Product visibility')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='format:Y-m-d H:M:S', verbose_name='created at')),
                ('update_at', models.DateTimeField(auto_now=True, help_text='format:Y-m-d H:M:S', verbose_name='last update at')),
                ('category', mptt.fields.TreeManyToManyField(to='inventory.category')),
            ],
        ),
        migrations.CreateModel(
            name='ProductAttributeValue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attribute_value', models.CharField(help_text='format:required,max-255', max_length=255, verbose_name='attribute value')),
                ('product_attribute', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='product_attribute', to='inventory.productattribute')),
            ],
        ),
        migrations.CreateModel(
            name='ProductAttributeValues',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attribute_values', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='attribute_values', to='inventory.productattributevalue')),
            ],
        ),
        migrations.CreateModel(
            name='ProductInventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sku', models.CharField(help_text='format:required,unique,max-20', max_length=20, unique=True, verbose_name='stock keeping unit')),
                ('upc', models.CharField(help_text='format:required,unique,max-12', max_length=12, unique=True, verbose_name='universal product code')),
                ('is_active', models.BooleanField(default=True, help_text='format:true=product visible', verbose_name='product visibility')),
                ('retail_price', models.DecimalField(decimal_places=2, error_messages={'name': {'max_length': 'the price must be greater than or equal to 999.99'}}, help_text='format:maximum price 999.99', max_digits=5, verbose_name='recommended price')),
                ('store_price', models.DecimalField(decimal_places=2, error_messages={'name': {'max_length': 'the price must be greater than or equal to 999.99'}}, help_text='format:maximum price 999.99', max_digits=5, verbose_name='recommended price')),
                ('weight', models.FloatField(verbose_name='product weight')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='format:Y-m-d H:M:S', verbose_name='created at')),
                ('update_at', models.DateTimeField(auto_now=True, help_text='format:Y-m-d H:M:S', verbose_name='last update at')),
                ('attribute_values', models.ManyToManyField(related_name='product_attribute_values', through='inventory.ProductAttributeValues', to='inventory.productattributevalue')),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='brand', to='inventory.brand')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='product', to='inventory.product')),
                ('product_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='product_type', to='inventory.producttype')),
            ],
        ),
        migrations.AddField(
            model_name='productattributevalues',
            name='product_inventory',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='product_attribute_value', to='inventory.productinventory'),
        ),
        migrations.AlterUniqueTogether(
            name='productattributevalues',
            unique_together={('attribute_values', 'product_inventory')},
        ),
    ]
